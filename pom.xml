<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.htwk</groupId>
	<artifactId>OpenNoteKeeper</artifactId>
	<version>0.1-SNAPSHOT</version>

	<dependencies>
		<dependency>
			<groupId>javax.jdo</groupId>
			<artifactId>jdo2-api</artifactId>
			<version>2.3-eb</version>
			<exclusions>
				<!-- exclude the legacy javax.transaction:transaction-api and replace 
					it with javax.transaction:jta (it appears to be the same thing) -->
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>transaction-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		
		<!-- 
		<dependency>
			<groupId>com.google.appengine.orm</groupId>
			<artifactId>datanucleus-appengine</artifactId>
			<version>1.0.8</version>
		</dependency>
		 -->

		<!-- <dependency> <groupId>org.datanucleus</groupId> <artifactId>datanucleus-core</artifactId> 
			<version>1.1.5</version> <exclusions> <exclusion> <groupId>javax.transaction</groupId> 
			<artifactId>transaction-api</artifactId> </exclusion> </exclusions> </dependency> -->

		<!-- <dependency> <groupId>com.google.appengine</groupId> <artifactId>appengine-api-1.0-sdk</artifactId> 
			<version>${gae.version}</version> </dependency> -->

		<!-- GWT dependencies -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- J2EE Servlet API. We need it to compile IndexServlet class. You can 
			probably remove it, if you don't explicitly use Servlets -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Make use of JSP tags. Remove, if you don't use JSPs -->
		<dependency>
			<artifactId>standard</artifactId>
			<groupId>taglibs</groupId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>

		<!-- These dependencies are here just for enabling logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.0</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.22</version>
		</dependency>

		<!-- Test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>

		<!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.mvp4g</groupId>
			<artifactId>mvp4g</artifactId>
			<version>1.3.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.9.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
			<version>2.9.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gwt-dnd</groupId>
			<artifactId>gwt-dnd</artifactId>
			<version>3.1.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>src</sourceDirectory>
		<outputDirectory>war/WEB-INF/classes</outputDirectory>
		<testSourceDirectory>test</testSourceDirectory>

		<plugins>
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>1.1.4</version>
				<configuration>
					<!-- Make sure this path contains your persistent classes! -->
					<mappingIncludes>**/model/*.class</mappingIncludes>
					<verbose>true</verbose>
					<enhancerName>ASM</enhancerName>
					<api>JDO</api>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>1.1.5</version>
						<exclusions>
							<exclusion>
								<groupId>javax.transaction</groupId>
								<artifactId>transaction-api</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-rdbms</artifactId>
						<version>1.1.5</version>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-enhancer</artifactId>
						<version>1.1.4</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<!-- <goal>i18n</goal> -->
							<!-- <goal>generateAsync</goal> -->
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<module>de.htwk.openNoteKeeper.OpenNoteKeeper</module>
					<runTarget>OpenNoteKeeper.html</runTarget>
					<buildOutputDirectory>${basedir}/war/WEB-INF/classes</buildOutputDirectory>
					<webXml>web.xml</webXml>
					<hostedWebapp>war</hostedWebapp>
					<debugPort>8001</debugPort>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<runTarget>OpenNoteKeeper.html</runTarget>
					<module>de.htwk.openNoteKeeper.OpenNoteKeeper</module>
					<buildOutputDirectory>${basedir}/war/WEB-INF/classes</buildOutputDirectory>
					<webXml>web.xml</webXml>
					<hostedWebapp>war</hostedWebapp>
					<debugPort>8001</debugPort>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.scala-tools</groupId> <artifactId>maven-scala-plugin</artifactId> 
				<version>2.15.2</version> <executions> <execution> <goals> <goal>compile</goal> 
				<goal>testCompile</goal> </goals> </execution> </executions> </plugin> -->
		</plugins>
	</build>

	<!-- Specify hard-coded project properties here -->
	<properties>
		<!-- This is just for "eclipse:eclipse" goal to always attempt downloading 
			sources -->
		<downloadSources>true</downloadSources>

		<!-- Specify AppEngine version for your project. It should match SDK version 
			pointed to by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->
		<gae.version>1.5.3</gae.version>

		<!-- GWT version -->
		<gwt.version>2.3.0</gwt.version>

		<!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
		<gae.application.version>2</gae.application.version>

		<!-- port defaults to 8080 -->
		<gae.port>8080</gae.port>

		<!-- Produce detailed JS during GWT compilation for development environment -->
		<gwt.style>DETAILED</gwt.style>
	</properties>
</project>